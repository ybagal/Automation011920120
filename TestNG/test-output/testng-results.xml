<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="1" ignored="0" total="6" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Tricentise Regression Suite" duration-ms="213" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
    <groups>
    </groups>
    <test name="Automobile Test" duration-ms="94" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
      <class name="TestNGAnnotation.Automobile">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:TestNGAnnotation.Automobile@3108bc]" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestNGAnnotation.Automobile@3108bc]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestNGAnnotation.Automobile@3108bc]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="login()[pri:0, instance:TestNGAnnotation.Automobile@3108bc]" name="login" duration-ms="12" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at TestNGAnnotation.Automobile.login(Automobile.java:64)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestNGAnnotation.Automobile@3108bc]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="Logout()[pri:0, instance:TestNGAnnotation.Automobile@3108bc]" name="Logout" duration-ms="0" started-at="2020-02-29T13:02:51 IST" depends-on-methods="TestNGAnnotation.Automobile.login" finished-at="2020-02-29T13:02:51 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Automobile.Logout()[pri:0, instance:TestNGAnnotation.Automobile@3108bc] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Automobile.Logout()[pri:0, instance:TestNGAnnotation.Automobile@3108bc] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method status="SKIP" signature="verifyHomepage()[pri:0, instance:TestNGAnnotation.Automobile@3108bc]" name="verifyHomepage" duration-ms="0" started-at="2020-02-29T13:02:51 IST" depends-on-methods="TestNGAnnotation.Automobile.login" finished-at="2020-02-29T13:02:51 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Automobile.verifyHomepage()[pri:0, instance:TestNGAnnotation.Automobile@3108bc] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Automobile.verifyHomepage()[pri:0, instance:TestNGAnnotation.Automobile@3108bc] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomepage -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:TestNGAnnotation.Automobile@3108bc]" name="afterTest" is-config="true" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:TestNGAnnotation.Automobile@3108bc]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- TestNGAnnotation.Automobile -->
    </test> <!-- Automobile Test -->
    <test name="Truck Test" duration-ms="20" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
      <class name="TestNGAnnotation.Truck">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="beforeSuite" is-config="true" duration-ms="19" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="beforeClass" is-config="true" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="test1" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test2()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="test2" duration-ms="2" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test3()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="test3" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="afterClass" is-config="true" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="AfterSuite()[pri:0, instance:TestNGAnnotation.Truck@610694f1]" name="AfterSuite" is-config="true" duration-ms="1" started-at="2020-02-29T13:02:51 IST" finished-at="2020-02-29T13:02:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- TestNGAnnotation.Truck -->
    </test> <!-- Truck Test -->
  </suite> <!-- Tricentise Regression Suite -->
</testng-results>
